
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocLTGTLEGEEQUALSNEleftPLUSMINUSleftTIMESDIVIDEMODleftANDORrightNOTleftBITWISE_NOTleftBITWISE_ANDleftBITWISE_ORleftBITWISE_XORleftBITWISE_LSHIFTBITWISE_RSHIFTrightPLUSPLUSMINUSMINUSAND ARGSTRING ASSIGN BITWISE_AND BITWISE_LSHIFT BITWISE_NOT BITWISE_OR BITWISE_RSHIFT BITWISE_XOR BREAK COLON COMMA CONTINUE DECREMENT DIVIDE DO ELSE EQUALS FALSE FLOAT FUNCTION GE GT IDENTIFIER IF IMPORT INCREMENT LBRACE LBRACKET LE LPAREN LT MAIN MINUS MINUSMINUS MOD NE NOT NUMBER OR PLUS PLUSPLUS PRINTDOUBLE PRINTF PRINTINT PRINTSTRING RBRACE RBRACKET RETURN RPAREN SEMICOLON SQUARE STRING TIMES TRUE TYPE VAL VAR WHILEprogram : import_list global_declaration_list declaration_list\n               | import_list declaration_list\n               | global_declaration_list declaration_list\n               | declaration_listimport_list : import_list import_statement\n                   | import_statementimport_statement : IMPORT IDENTIFIER SEMICOLONglobal_declaration_list : global_declaration_list global_declaration\n                               | emptyglobal_declaration : variable_declarationdeclaration_list : declaration_list declaration\n                        | emptydeclaration : function_declaration\n                   | statementvariable_declaration : VAL IDENTIFIER COLON TYPE ASSIGN expression SEMICOLON\n                            | VAR IDENTIFIER COLON TYPE ASSIGN expression SEMICOLON\n                            | VAR IDENTIFIER COLON TYPE SEMICOLON\n                            | VAR IDENTIFIER COLON array_type ASSIGN array_initializer SEMICOLON\n                            | VAL IDENTIFIER COLON array_type ASSIGN array_initializer SEMICOLON\n                            | VAR IDENTIFIER COLON array_allocation_type SEMICOLON\n                            | VAL IDENTIFIER COLON array_allocation_type SEMICOLONarray_type : LBRACKET TYPE RBRACKET\n                  | LBRACKET array_type RBRACKET\n                  | LBRACKET RBRACKET array_type\n                  | LBRACKET RBRACKET TYPEarray_allocation_type : LBRACKET NUMBER RBRACKET array_allocation_type\n                             | LBRACKET NUMBER RBRACKET TYPEarray_initializer : LBRACKET expression_list RBRACKET\n                         | LBRACKET array_initializer_list RBRACKETarray_initializer_list : array_initializer_list COMMA array_initializer\n                              | array_initializerfunction_declaration : FUNCTION IDENTIFIER LPAREN parameter_list RPAREN COLON TYPE SEMICOLON\n                            | function_statementfunction_statement : FUNCTION IDENTIFIER LPAREN parameter_list RPAREN COLON TYPE statement_block\n                          | FUNCTION IDENTIFIER LPAREN parameter_list RPAREN statement_block\n                          | FUNCTION MAIN LPAREN parameter_list RPAREN COLON TYPE statement_block\n                          | FUNCTION MAIN LPAREN VAL ARGSTRING RPAREN COLON TYPE statement_block\n                          | FUNCTION MAIN LPAREN VAR ARGSTRING RPAREN COLON TYPE statement_block\n                          | FUNCTION MAIN LPAREN parameter_list RPAREN statement_block\n                          | FUNCTION MAIN LPAREN VAR ARGSTRING RPAREN statement_block\n                          | FUNCTION MAIN LPAREN VAL ARGSTRING RPAREN statement_blockparameter_list : parameter_list COMMA parameter\n                      | parameter\n                      | emptyparameter : IDENTIFIER COLON TYPE\n                 | VAL IDENTIFIER COLON TYPE\n                 | VAR IDENTIFIER COLON TYPEstatement_block : LBRACE statement_list RBRACEstatement_list : statement_list statement\n                      | emptystatement : variable_declaration\n                 | if_statement\n                 | while_statement\n                 | do_while_statement\n                 | assignment_statement\n                 | array_assignment_statement\n                 | increment_statement\n                 | decrement_statement\n                 | expression_statement\n                 | return_statement\n                 | print_statementprint_statement : PRINTINT LPAREN expression RPAREN SEMICOLON\n                       | PRINTDOUBLE LPAREN expression RPAREN SEMICOLON\n                       | PRINTSTRING LPAREN expression RPAREN SEMICOLON\n                       | PRINTF LPAREN STRING COMMA expression_list RPAREN SEMICOLONreturn_statement : RETURN expression SEMICOLON\n                        | RETURN SEMICOLONif_statement : IF LPAREN expression RPAREN statement_block ELSE statement_block\n                    | IF LPAREN expression RPAREN statement_block\n                    | IF expression statement_block ELSE statement_block\n                    | IF expression statement_blockwhile_statement : WHILE LPAREN expression RPAREN statement_block\n                       | WHILE expression statement_blockdo_while_statement : DO statement_block WHILE LPAREN expression RPAREN SEMICOLON\n                          | DO statement_block WHILE expression SEMICOLONassignment_statement : IDENTIFIER ASSIGN expression SEMICOLON\n                            | IDENTIFIER INCREMENT expression SEMICOLON\n                            | IDENTIFIER DECREMENT expression SEMICOLONincrement_statement : IDENTIFIER PLUSPLUS SEMICOLON\n                           | PLUSPLUS IDENTIFIER SEMICOLONdecrement_statement : IDENTIFIER MINUSMINUS SEMICOLON\n                           | MINUSMINUS IDENTIFIER SEMICOLONarray_assignment_statement : array_access ASSIGN expression SEMICOLONexpression_statement : expression SEMICOLONfunction_call : IDENTIFIER LPAREN expression_list RPARENarray_access : IDENTIFIER array_access_listarray_access_list : array_access_list LBRACKET expression RBRACKET\n                         | LBRACKET expression RBRACKETexpression_list : expression_list COMMA expression\n                       | expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression MOD expression\n                  | expression GT expression\n                  | expression LT expression\n                  | expression GE expression\n                  | expression LE expression\n                  | expression EQUALS expression\n                  | expression NE expression\n                  | expression AND expression\n                  | expression OR expression\n                  | expression BITWISE_AND expression\n                  | expression BITWISE_OR expression\n                  | expression SQUARE expression\n                  | expression BITWISE_NOT expression\n                  | expression BITWISE_LSHIFT expression\n                  | expression BITWISE_RSHIFT expression\n                  | LPAREN expression RPAREN\n                  | NOT expression\n                  | MINUS NUMBER %prec NOT\n                  | MINUS FLOAT %prec NOT\n                  | IDENTIFIER\n                  | array_access\n                  | BREAK\n                  | CONTINUE\n                  | NUMBER\n                  | FLOAT\n                  | STRING\n                  | TRUE\n                  | FALSE\n                  | function_callempty :'
    
_lr_action_items = {end':([0,1,2,3,4,5,6,8,9,10,11,12,13,14,17,18,19,23,24,25,26,27,28,29,30,31,32,33,34,58,74,104,112,120,121,147,149,154,155,156,177,178,179,189,191,198,205,207,218,219,220,222,223,224,225,239,244,250,251,258,259,265,267,268,269,270,274,275,276,280,281,],[-124,0,-124,-124,-4,-6,-9,-124,-2,-5,-3,-8,-12,-10,-11,-13,-14,-33,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-1,-84,-67,-7,-79,-81,-71,-73,-80,-82,-66,-76,-77,-78,-48,-83,-21,-17,-20,-69,-70,-72,-75,-62,-63,-64,-35,-39,-15,-19,-16,-18,-41,-40,-68,-74,-65,-32,-34,-36,-37,-38,]),'MAIN':([20,],[62,]),'ASSIGN':([21,39,68,161,162,165,166,183,216,230,231,232,233,],[63,100,-86,196,197,204,206,-88,-87,-22,-24,-25,-23,]),'INCREMENT':([21,],[64,]),'DECREMENT':([21,],[65,]),'SEMICOLON':([21,35,39,42,47,50,51,52,53,54,55,56,57,66,67,68,72,73,101,102,103,109,110,111,117,118,119,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,153,163,165,167,181,183,188,192,193,194,216,227,228,235,236,248,249,256,257,260,271,272,],[-114,74,-115,104,-120,-118,-119,-116,-117,-121,-122,-123,112,120,121,-86,-114,-115,154,155,156,-112,-113,-111,177,178,179,-110,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,191,198,205,207,-85,-88,222,223,224,225,-87,250,251,258,259,269,270,-26,-27,274,-28,-29,]),'PLUS':([21,35,39,47,50,51,52,53,54,55,56,68,71,72,73,95,97,103,109,110,111,117,118,119,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,153,157,158,159,180,181,183,184,186,188,216,217,221,227,235,248,],[-114,75,-115,-120,-118,-119,-116,-117,-121,-122,-123,-86,75,-114,-115,75,75,75,-112,-113,-111,75,75,75,75,75,-110,-91,-92,-93,-94,-95,75,75,75,75,75,75,-102,-103,-104,-105,75,-107,-108,-109,75,75,75,75,75,75,75,-85,-88,-110,-110,75,-87,75,75,75,75,-110,]),'TIMES':([21,35,39,47,50,51,52,53,54,55,56,68,71,72,73,95,97,103,109,110,111,117,118,119,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,153,157,158,159,180,181,183,184,186,188,216,217,221,227,235,248,],[-114,77,-115,-120,-118,-119,-116,-117,-121,-122,-123,-86,77,-114,-115,77,77,77,-112,-113,-111,77,77,77,77,77,-110,77,77,-93,-94,-95,77,77,77,77,77,77,-102,-103,-104,-105,77,-107,-108,-109,77,77,77,77,77,77,77,-85,-88,-110,-110,77,-87,77,77,77,77,-110,]),'DIVIDE':([21,35,39,47,50,51,52,53,54,55,56,68,71,72,73,95,97,103,109,110,111,117,118,119,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,153,157,158,159,180,181,183,184,186,188,216,217,221,227,235,248,],[-114,78,-115,-120,-118,-119,-116,-117,-121,-122,-123,-86,78,-114,-115,78,78,78,-112,-113,-111,78,78,78,78,78,-110,78,78,-93,-94,-95,78,78,78,78,78,78,-102,-103,-104,-105,78,-107,-108,-109,78,78,78,78,78,78,78,-85,-88,-110,-110,78,-87,78,78,78,78,-110,]),'MOD':([21,35,39,47,50,51,52,53,54,55,56,68,71,72,73,95,97,103,109,110,111,117,118,119,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,153,157,158,159,180,181,183,184,186,188,216,217,221,227,235,248,],[-114,79,-115,-120,-118,-119,-116,-117,-121,-122,-123,-86,79,-114,-115,79,79,79,-112,-113,-111,79,79,79,79,79,-110,79,79,-93,-94,-95,79,79,79,79,79,79,-102,-103,-104,-105,79,-107,-108,-109,79,79,79,79,79,79,79,-85,-88,-110,-110,79,-87,79,79,79,79,-110,]),'GT':([21,35,39,47,50,51,52,53,54,55,56,68,71,72,73,95,97,103,109,110,111,117,118,119,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,153,157,158,159,180,181,183,184,186,188,216,217,221,227,235,248,],[-114,80,-115,-120,-118,-119,-116,-117,-121,-122,-123,-86,80,-114,-115,80,80,80,-112,-113,-111,80,80,80,80,80,-110,-91,-92,-93,-94,-95,None,None,None,None,None,None,-102,-103,-104,-105,80,-107,-108,-109,80,80,80,80,80,80,80,-85,-88,-110,-110,80,-87,80,80,80,80,-110,]),'LT':([21,35,39,47,50,51,52,53,54,55,56,68,71,72,73,95,97,103,109,110,111,117,118,119,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,153,157,158,159,180,181,183,184,186,188,216,217,221,227,235,248,],[-114,81,-115,-120,-118,-119,-116,-117,-121,-122,-123,-86,81,-114,-115,81,81,81,-112,-113,-111,81,81,81,81,81,-110,-91,-92,-93,-94,-95,None,None,None,None,None,None,-102,-103,-104,-105,81,-107,-108,-109,81,81,81,81,81,81,81,-85,-88,-110,-110,81,-87,81,81,81,81,-110,]),'GE':([21,35,39,47,50,51,52,53,54,55,56,68,71,72,73,95,97,103,109,110,111,117,118,119,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,153,157,158,159,180,181,183,184,186,188,216,217,221,227,235,248,],[-114,82,-115,-120,-118,-119,-116,-117,-121,-122,-123,-86,82,-114,-115,82,82,82,-112,-113,-111,82,82,82,82,82,-110,-91,-92,-93,-94,-95,None,None,None,None,None,None,-102,-103,-104,-105,82,-107,-108,-109,82,82,82,82,82,82,82,-85,-88,-110,-110,82,-87,82,82,82,82,-110,]),'LE':([21,35,39,47,50,51,52,53,54,55,56,68,71,72,73,95,97,103,109,110,111,117,118,119,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,153,157,158,159,180,181,183,184,186,188,216,217,221,227,235,248,],[-114,83,-115,-120,-118,-119,-116,-117,-121,-122,-123,-86,83,-114,-115,83,83,83,-112,-113,-111,83,83,83,83,83,-110,-91,-92,-93,-94,-95,None,None,None,None,None,None,-102,-103,-104,-105,83,-107,-108,-109,83,83,83,83,83,83,83,-85,-88,-110,-110,83,-87,83,83,83,83,-110,]),'EQUALS':([21,35,39,47,50,51,52,53,54,55,56,68,71,72,73,95,97,103,109,110,111,117,118,119,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,153,157,158,159,180,181,183,184,186,188,216,217,221,227,235,248,],[-114,84,-115,-120,-118,-119,-116,-117,-121,-122,-123,-86,84,-114,-115,84,84,84,-112,-113,-111,84,84,84,84,84,-110,-91,-92,-93,-94,-95,None,None,None,None,None,None,-102,-103,-104,-105,84,-107,-108,-109,84,84,84,84,84,84,84,-85,-88,-110,-110,84,-87,84,84,84,84,-110,]),'NE':([21,35,39,47,50,51,52,53,54,55,56,68,71,72,73,95,97,103,109,110,111,117,118,119,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,153,157,158,159,180,181,183,184,186,188,216,217,221,227,235,248,],[-114,85,-115,-120,-118,-119,-116,-117,-121,-122,-123,-86,85,-114,-115,85,85,85,-112,-113,-111,85,85,85,85,85,-110,-91,-92,-93,-94,-95,None,None,None,None,None,None,-102,-103,-104,-105,85,-107,-108,-109,85,85,85,85,85,85,85,-85,-88,-110,-110,85,-87,85,85,85,85,-110,]),'AND':([21,35,39,47,50,51,52,53,54,55,56,68,71,72,73,95,97,103,109,110,111,117,118,119,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,153,157,158,159,180,181,183,184,186,188,216,217,221,227,235,248,],[-114,86,-115,-120,-118,-119,-116,-117,-121,-122,-123,-86,86,-114,-115,86,86,86,-112,-113,-111,86,86,86,86,86,-110,86,86,86,86,86,86,86,86,86,86,86,-102,-103,-104,-105,86,-107,-108,-109,86,86,86,86,86,86,86,-85,-88,-110,-110,86,-87,86,86,86,86,-110,]),'OR':([21,35,39,47,50,51,52,53,54,55,56,68,71,72,73,95,97,103,109,110,111,117,118,119,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,153,157,158,159,180,181,183,184,186,188,216,217,221,227,235,248,],[-114,87,-115,-120,-118,-119,-116,-117,-121,-122,-123,-86,87,-114,-115,87,87,87,-112,-113,-111,87,87,87,87,87,-110,87,87,87,87,87,87,87,87,87,87,87,-102,-103,-104,-105,87,-107,-108,-109,87,87,87,87,87,87,87,-85,-88,-110,-110,87,-87,87,87,87,87,-110,]),'BITWISE_AND':([21,35,39,47,50,51,52,53,54,55,56,68,71,72,73,95,97,103,109,110,111,117,118,119,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,153,157,158,159,180,181,183,184,186,188,216,217,221,227,235,248,],[-114,88,-115,-120,-118,-119,-116,-117,-121,-122,-123,-86,88,-114,-115,88,88,88,-112,-113,88,88,88,88,88,88,-110,88,88,88,88,88,88,88,88,88,88,88,88,88,-104,-105,88,88,-108,-109,88,88,88,88,88,88,88,-85,-88,-110,-110,88,-87,88,88,88,88,-110,]),'BITWISE_OR':([21,35,39,47,50,51,52,53,54,55,56,68,71,72,73,95,97,103,109,110,111,117,118,119,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,153,157,158,159,180,181,183,184,186,188,216,217,221,227,235,248,],[-114,89,-115,-120,-118,-119,-116,-117,-121,-122,-123,-86,89,-114,-115,89,89,89,-112,-113,89,89,89,89,89,89,-110,89,89,89,89,89,89,89,89,89,89,89,89,89,89,-105,89,89,-108,-109,89,89,89,89,89,89,89,-85,-88,-110,-110,89,-87,89,89,89,89,-110,]),'SQUARE':([21,35,39,47,50,51,52,53,54,55,56,68,71,72,73,95,97,103,109,110,111,117,118,119,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,153,157,158,159,180,181,183,184,186,188,216,217,221,227,235,248,],[-114,90,-115,-120,-118,-119,-116,-117,-121,-122,-123,-86,90,-114,-115,90,90,90,-112,-113,-111,90,90,90,90,90,-110,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,90,-107,-108,-109,90,90,90,90,90,90,90,-85,-88,-110,-110,90,-87,90,90,90,90,-110,]),'BITWISE_NOT':([21,35,39,47,50,51,52,53,54,55,56,68,71,72,73,95,97,103,109,110,111,117,118,119,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,153,157,158,159,180,181,183,184,186,188,216,217,221,227,235,248,],[-114,91,-115,-120,-118,-119,-116,-117,-121,-122,-123,-86,91,-114,-115,91,91,91,-112,-113,91,91,91,91,91,91,-110,91,91,91,91,91,91,91,91,91,91,91,91,91,-104,-105,91,-107,-108,-109,91,91,91,91,91,91,91,-85,-88,-110,-110,91,-87,91,91,91,91,-110,]),'BITWISE_LSHIFT':([21,35,39,47,50,51,52,53,54,55,56,68,71,72,73,95,97,103,109,110,111,117,118,119,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,153,157,158,159,180,181,183,184,186,188,216,217,221,227,235,248,],[-114,92,-115,-120,-118,-119,-116,-117,-121,-122,-123,-86,92,-114,-115,92,92,92,-112,-113,92,92,92,92,92,92,-110,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,-108,-109,92,92,92,92,92,92,92,-85,-88,-110,-110,92,-87,92,92,92,92,-110,]),'BITWISE_RSHIFT':([21,35,39,47,50,51,52,53,54,55,56,68,71,72,73,95,97,103,109,110,111,117,118,119,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,153,157,158,159,180,181,183,184,186,188,216,217,221,227,235,248,],[-114,93,-115,-120,-118,-119,-116,-117,-121,-122,-123,-86,93,-114,-115,93,93,93,-112,-113,93,93,93,93,93,93,-110,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,-108,-109,93,93,93,93,93,93,93,-85,-88,-110,-110,93,-87,93,93,93,93,-110,]),'LBRACKET':([21,68,72,113,114,164,183,197,199,201,206,216,229,234,273,],[70,122,70,164,164,199,-88,229,199,199,229,-87,229,255,229,]),'RBRACE':([24,25,26,27,28,29,30,31,32,33,34,74,99,104,120,121,147,149,151,152,154,155,156,177,178,179,189,190,191,198,205,207,218,219,220,222,223,224,225,250,251,258,259,268,269,270,],[-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-84,-124,-67,-79,-81,-71,-73,189,-50,-80,-82,-66,-76,-77,-78,-48,-49,-83,-21,-17,-20,-69,-70,-72,-75,-62,-63,-64,-15,-19,-16,-18,-68,-74,-65,]),'LBRACE':([38,47,50,51,52,53,54,55,56,68,72,73,95,97,109,110,111,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,181,183,184,185,186,209,213,216,245,246,247,260,263,277,278,],[99,-120,-118,-119,-116,-117,-121,-122,-123,-86,-114,-115,99,99,-112,-113,-111,-110,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-85,-88,99,99,99,99,99,-87,99,99,99,99,99,99,99,]),'RPAREN':([47,50,51,52,53,54,55,56,68,71,72,73,109,110,111,115,116,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,157,158,159,169,170,171,174,181,183,214,215,216,217,221,226,237,240,261,262,],[-120,-118,-119,-116,-117,-121,-122,-123,-86,126,-114,-115,-112,-113,-111,-124,-124,181,-90,-110,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,184,186,192,193,194,209,-43,-44,213,-85,-88,245,246,-87,-89,248,249,-45,-42,-46,-47,]),'COMMA':([47,50,51,52,53,54,55,56,68,72,73,109,110,111,115,116,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,160,169,170,171,174,181,183,216,217,226,237,240,252,253,254,261,262,271,272,279,],[-120,-118,-119,-116,-117,-121,-122,-123,-86,-114,-115,-112,-113,-111,-124,-124,182,-90,-110,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,195,210,-43,-44,210,-85,-88,-87,-89,182,-45,-42,182,273,-31,-46,-47,-28,-29,-30,]),'RBRACKET':([47,50,51,52,53,54,55,56,68,72,73,109,110,111,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,164,180,181,183,199,200,202,203,216,217,230,231,232,233,252,253,254,271,272,279,],[-120,-118,-119,-116,-117,-121,-122,-123,-86,-114,-115,-112,-113,-111,-90,183,-110,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,201,216,-85,-88,201,230,233,234,-87,-89,-22,-24,-25,-23,271,272,-31,-28,-29,-30,]),'COLON':([59,60,168,209,211,212,213,245,246,],[113,114,208,238,241,242,243,264,266,]),'TYPE':([113,114,164,199,201,208,234,238,241,242,243,264,266,],[161,165,200,200,232,237,257,260,261,262,263,277,278,]),'ELSE':([147,189,218,],[185,-48,247,]),'ARGSTRING':([175,176,],[214,215,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'import_list':([0,],[2,]),'global_declaration_list':([0,2,],[3,8,]),'declaration_list':([0,2,3,8,],[4,9,11,58,]),'import_statement':([0,2,],[5,10,]),'empty':([0,2,3,8,99,115,116,],[6,6,13,13,152,171,171,]),'global_declaration':([3,8,],[12,12,]),'variable_declaration':([3,4,8,9,11,58,151,],[14,24,14,24,24,24,24,]),'declaration':([4,9,11,58,],[17,17,17,17,]),'function_declaration':([4,9,11,58,],[18,18,18,18,]),'statement':([4,9,11,58,151,],[19,19,19,19,190,]),'function_statement':([4,9,11,58,],[23,23,23,23,]),'if_statement':([4,9,11,58,151,],[25,25,25,25,25,]),'while_statement':([4,9,11,58,151,],[26,26,26,26,26,]),'do_while_statement':([4,9,11,58,151,],[27,27,27,27,27,]),'assignment_statement':([4,9,11,58,151,],[28,28,28,28,28,]),'array_assignment_statement':([4,9,11,58,151,],[29,29,29,29,29,]),'increment_statement':([4,9,11,58,151,],[30,30,30,30,30,]),'decrement_statement':([4,9,11,58,151,],[31,31,31,31,31,]),'expression_statement':([4,9,11,58,151,],[32,32,32,32,32,]),'return_statement':([4,9,11,58,151,],[33,33,33,33,33,]),'print_statement':([4,9,11,58,151,],[34,34,34,34,34,]),'expression':([4,9,11,22,36,37,42,49,58,63,64,65,69,70,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,100,105,106,107,122,150,151,182,187,195,196,204,229,],[35,35,35,71,95,97,103,111,35,117,118,119,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,153,157,158,159,180,188,35,217,221,124,227,235,124,]),'array_access':([4,9,11,22,36,37,42,49,58,63,64,65,69,70,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,100,105,106,107,122,150,151,182,187,195,196,204,229,],[39,39,39,73,73,73,73,73,39,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,39,73,73,73,73,73,73,]),'function_call':([4,9,11,22,36,37,42,49,58,63,64,65,69,70,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,100,105,106,107,122,150,151,182,187,195,196,204,229,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'array_access_list':([21,72,],[68,68,]),'statement_block':([38,95,97,184,185,186,209,213,245,246,247,260,263,277,278,],[98,147,149,218,219,220,239,244,265,267,268,275,276,280,281,]),'expression_list':([69,195,229,],[123,226,252,]),'statement_list':([99,],[151,]),'array_type':([113,114,164,199,201,],[162,166,202,202,231,]),'array_allocation_type':([113,114,234,],[163,167,256,]),'parameter_list':([115,116,],[169,174,]),'parameter':([115,116,210,],[170,170,240,]),'array_initializer':([197,206,229,273,],[228,236,254,279,]),'array_initializer_list':([229,],[253,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> import_list global_declaration_list declaration_list','program',3,'p_program','grammar.py',27),
  ('program -> import_list declaration_list','program',2,'p_program','grammar.py',28),
  ('program -> global_declaration_list declaration_list','program',2,'p_program','grammar.py',29),
  ('program -> declaration_list','program',1,'p_program','grammar.py',30),
  ('import_list -> import_list import_statement','import_list',2,'p_import_list','grammar.py',47),
  ('import_list -> import_statement','import_list',1,'p_import_list','grammar.py',48),
  ('import_statement -> IMPORT IDENTIFIER SEMICOLON','import_statement',3,'p_import_statement','grammar.py',55),
  ('global_declaration_list -> global_declaration_list global_declaration','global_declaration_list',2,'p_global_declaration_list','grammar.py',59),
  ('global_declaration_list -> empty','global_declaration_list',1,'p_global_declaration_list','grammar.py',60),
  ('global_declaration -> variable_declaration','global_declaration',1,'p_global_declaration','grammar.py',67),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','grammar.py',71),
  ('declaration_list -> empty','declaration_list',1,'p_declaration_list','grammar.py',72),
  ('declaration -> function_declaration','declaration',1,'p_declaration','grammar.py',79),
  ('declaration -> statement','declaration',1,'p_declaration','grammar.py',80),
  ('variable_declaration -> VAL IDENTIFIER COLON TYPE ASSIGN expression SEMICOLON','variable_declaration',7,'p_variable_declaration','grammar.py',85),
  ('variable_declaration -> VAR IDENTIFIER COLON TYPE ASSIGN expression SEMICOLON','variable_declaration',7,'p_variable_declaration','grammar.py',86),
  ('variable_declaration -> VAR IDENTIFIER COLON TYPE SEMICOLON','variable_declaration',5,'p_variable_declaration','grammar.py',87),
  ('variable_declaration -> VAR IDENTIFIER COLON array_type ASSIGN array_initializer SEMICOLON','variable_declaration',7,'p_variable_declaration','grammar.py',88),
  ('variable_declaration -> VAL IDENTIFIER COLON array_type ASSIGN array_initializer SEMICOLON','variable_declaration',7,'p_variable_declaration','grammar.py',89),
  ('variable_declaration -> VAR IDENTIFIER COLON array_allocation_type SEMICOLON','variable_declaration',5,'p_variable_declaration','grammar.py',90),
  ('variable_declaration -> VAL IDENTIFIER COLON array_allocation_type SEMICOLON','variable_declaration',5,'p_variable_declaration','grammar.py',91),
  ('array_type -> LBRACKET TYPE RBRACKET','array_type',3,'p_array_type','grammar.py',102),
  ('array_type -> LBRACKET array_type RBRACKET','array_type',3,'p_array_type','grammar.py',103),
  ('array_type -> LBRACKET RBRACKET array_type','array_type',3,'p_array_type','grammar.py',104),
  ('array_type -> LBRACKET RBRACKET TYPE','array_type',3,'p_array_type','grammar.py',105),
  ('array_allocation_type -> LBRACKET NUMBER RBRACKET array_allocation_type','array_allocation_type',4,'p_array_allocation_type','grammar.py',116),
  ('array_allocation_type -> LBRACKET NUMBER RBRACKET TYPE','array_allocation_type',4,'p_array_allocation_type','grammar.py',117),
  ('array_initializer -> LBRACKET expression_list RBRACKET','array_initializer',3,'p_array_initializer','grammar.py',124),
  ('array_initializer -> LBRACKET array_initializer_list RBRACKET','array_initializer',3,'p_array_initializer','grammar.py',125),
  ('array_initializer_list -> array_initializer_list COMMA array_initializer','array_initializer_list',3,'p_array_initializer_list','grammar.py',129),
  ('array_initializer_list -> array_initializer','array_initializer_list',1,'p_array_initializer_list','grammar.py',130),
  ('function_declaration -> FUNCTION IDENTIFIER LPAREN parameter_list RPAREN COLON TYPE SEMICOLON','function_declaration',8,'p_function_declaration','grammar.py',137),
  ('function_declaration -> function_statement','function_declaration',1,'p_function_declaration','grammar.py',138),
  ('function_statement -> FUNCTION IDENTIFIER LPAREN parameter_list RPAREN COLON TYPE statement_block','function_statement',8,'p_function_statement','grammar.py',145),
  ('function_statement -> FUNCTION IDENTIFIER LPAREN parameter_list RPAREN statement_block','function_statement',6,'p_function_statement','grammar.py',146),
  ('function_statement -> FUNCTION MAIN LPAREN parameter_list RPAREN COLON TYPE statement_block','function_statement',8,'p_function_statement','grammar.py',147),
  ('function_statement -> FUNCTION MAIN LPAREN VAL ARGSTRING RPAREN COLON TYPE statement_block','function_statement',9,'p_function_statement','grammar.py',148),
  ('function_statement -> FUNCTION MAIN LPAREN VAR ARGSTRING RPAREN COLON TYPE statement_block','function_statement',9,'p_function_statement','grammar.py',149),
  ('function_statement -> FUNCTION MAIN LPAREN parameter_list RPAREN statement_block','function_statement',6,'p_function_statement','grammar.py',150),
  ('function_statement -> FUNCTION MAIN LPAREN VAR ARGSTRING RPAREN statement_block','function_statement',7,'p_function_statement','grammar.py',151),
  ('function_statement -> FUNCTION MAIN LPAREN VAL ARGSTRING RPAREN statement_block','function_statement',7,'p_function_statement','grammar.py',152),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','grammar.py',171),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','grammar.py',172),
  ('parameter_list -> empty','parameter_list',1,'p_parameter_list','grammar.py',173),
  ('parameter -> IDENTIFIER COLON TYPE','parameter',3,'p_parameter','grammar.py',182),
  ('parameter -> VAL IDENTIFIER COLON TYPE','parameter',4,'p_parameter','grammar.py',183),
  ('parameter -> VAR IDENTIFIER COLON TYPE','parameter',4,'p_parameter','grammar.py',184),
  ('statement_block -> LBRACE statement_list RBRACE','statement_block',3,'p_statement_block','grammar.py',191),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','grammar.py',195),
  ('statement_list -> empty','statement_list',1,'p_statement_list','grammar.py',196),
  ('statement -> variable_declaration','statement',1,'p_statement','grammar.py',204),
  ('statement -> if_statement','statement',1,'p_statement','grammar.py',205),
  ('statement -> while_statement','statement',1,'p_statement','grammar.py',206),
  ('statement -> do_while_statement','statement',1,'p_statement','grammar.py',207),
  ('statement -> assignment_statement','statement',1,'p_statement','grammar.py',208),
  ('statement -> array_assignment_statement','statement',1,'p_statement','grammar.py',209),
  ('statement -> increment_statement','statement',1,'p_statement','grammar.py',210),
  ('statement -> decrement_statement','statement',1,'p_statement','grammar.py',211),
  ('statement -> expression_statement','statement',1,'p_statement','grammar.py',212),
  ('statement -> return_statement','statement',1,'p_statement','grammar.py',213),
  ('statement -> print_statement','statement',1,'p_statement','grammar.py',214),
  ('print_statement -> PRINTINT LPAREN expression RPAREN SEMICOLON','print_statement',5,'p_print_statement','grammar.py',218),
  ('print_statement -> PRINTDOUBLE LPAREN expression RPAREN SEMICOLON','print_statement',5,'p_print_statement','grammar.py',219),
  ('print_statement -> PRINTSTRING LPAREN expression RPAREN SEMICOLON','print_statement',5,'p_print_statement','grammar.py',220),
  ('print_statement -> PRINTF LPAREN STRING COMMA expression_list RPAREN SEMICOLON','print_statement',7,'p_print_statement','grammar.py',221),
  ('return_statement -> RETURN expression SEMICOLON','return_statement',3,'p_return_statement','grammar.py',232),
  ('return_statement -> RETURN SEMICOLON','return_statement',2,'p_return_statement','grammar.py',233),
  ('if_statement -> IF LPAREN expression RPAREN statement_block ELSE statement_block','if_statement',7,'p_if_statement','grammar.py',240),
  ('if_statement -> IF LPAREN expression RPAREN statement_block','if_statement',5,'p_if_statement','grammar.py',241),
  ('if_statement -> IF expression statement_block ELSE statement_block','if_statement',5,'p_if_statement','grammar.py',242),
  ('if_statement -> IF expression statement_block','if_statement',3,'p_if_statement','grammar.py',243),
  ('while_statement -> WHILE LPAREN expression RPAREN statement_block','while_statement',5,'p_while_statement','grammar.py',257),
  ('while_statement -> WHILE expression statement_block','while_statement',3,'p_while_statement','grammar.py',258),
  ('do_while_statement -> DO statement_block WHILE LPAREN expression RPAREN SEMICOLON','do_while_statement',7,'p_do_while_statement','grammar.py',265),
  ('do_while_statement -> DO statement_block WHILE expression SEMICOLON','do_while_statement',5,'p_do_while_statement','grammar.py',266),
  ('assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON','assignment_statement',4,'p_assignment_statement','grammar.py',273),
  ('assignment_statement -> IDENTIFIER INCREMENT expression SEMICOLON','assignment_statement',4,'p_assignment_statement','grammar.py',274),
  ('assignment_statement -> IDENTIFIER DECREMENT expression SEMICOLON','assignment_statement',4,'p_assignment_statement','grammar.py',275),
  ('increment_statement -> IDENTIFIER PLUSPLUS SEMICOLON','increment_statement',3,'p_increment_statement','grammar.py',284),
  ('increment_statement -> PLUSPLUS IDENTIFIER SEMICOLON','increment_statement',3,'p_increment_statement','grammar.py',285),
  ('decrement_statement -> IDENTIFIER MINUSMINUS SEMICOLON','decrement_statement',3,'p_decrement_statement','grammar.py',292),
  ('decrement_statement -> MINUSMINUS IDENTIFIER SEMICOLON','decrement_statement',3,'p_decrement_statement','grammar.py',293),
  ('array_assignment_statement -> array_access ASSIGN expression SEMICOLON','array_assignment_statement',4,'p_array_assignment_statement','grammar.py',300),
  ('expression_statement -> expression SEMICOLON','expression_statement',2,'p_expression_statement','grammar.py',304),
  ('function_call -> IDENTIFIER LPAREN expression_list RPAREN','function_call',4,'p_function_call','grammar.py',308),
  ('array_access -> IDENTIFIER array_access_list','array_access',2,'p_array_access','grammar.py',312),
  ('array_access_list -> array_access_list LBRACKET expression RBRACKET','array_access_list',4,'p_array_access_list','grammar.py',316),
  ('array_access_list -> LBRACKET expression RBRACKET','array_access_list',3,'p_array_access_list','grammar.py',317),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','grammar.py',325),
  ('expression_list -> expression','expression_list',1,'p_expression_list','grammar.py',326),
  ('expression -> expression PLUS expression','expression',3,'p_expression','grammar.py',333),
  ('expression -> expression MINUS expression','expression',3,'p_expression','grammar.py',334),
  ('expression -> expression TIMES expression','expression',3,'p_expression','grammar.py',335),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','grammar.py',336),
  ('expression -> expression MOD expression','expression',3,'p_expression','grammar.py',337),
  ('expression -> expression GT expression','expression',3,'p_expression','grammar.py',338),
  ('expression -> expression LT expression','expression',3,'p_expression','grammar.py',339),
  ('expression -> expression GE expression','expression',3,'p_expression','grammar.py',340),
  ('expression -> expression LE expression','expression',3,'p_expression','grammar.py',341),
  ('expression -> expression EQUALS expression','expression',3,'p_expression','grammar.py',342),
  ('expression -> expression NE expression','expression',3,'p_expression','grammar.py',343),
  ('expression -> expression AND expression','expression',3,'p_expression','grammar.py',344),
  ('expression -> expression OR expression','expression',3,'p_expression','grammar.py',345),
  ('expression -> expression BITWISE_AND expression','expression',3,'p_expression','grammar.py',346),
  ('expression -> expression BITWISE_OR expression','expression',3,'p_expression','grammar.py',347),
  ('expression -> expression SQUARE expression','expression',3,'p_expression','grammar.py',348),
  ('expression -> expression BITWISE_NOT expression','expression',3,'p_expression','grammar.py',349),
  ('expression -> expression BITWISE_LSHIFT expression','expression',3,'p_expression','grammar.py',350),
  ('expression -> expression BITWISE_RSHIFT expression','expression',3,'p_expression','grammar.py',351),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','grammar.py',352),
  ('expression -> NOT expression','expression',2,'p_expression','grammar.py',353),
  ('expression -> MINUS NUMBER','expression',2,'p_expression','grammar.py',354),
  ('expression -> MINUS FLOAT','expression',2,'p_expression','grammar.py',355),
  ('expression -> IDENTIFIER','expression',1,'p_expression','grammar.py',356),
  ('expression -> array_access','expression',1,'p_expression','grammar.py',357),
  ('expression -> BREAK','expression',1,'p_expression','grammar.py',358),
  ('expression -> CONTINUE','expression',1,'p_expression','grammar.py',359),
  ('expression -> NUMBER','expression',1,'p_expression','grammar.py',360),
  ('expression -> FLOAT','expression',1,'p_expression','grammar.py',361),
  ('expression -> STRING','expression',1,'p_expression','grammar.py',362),
  ('expression -> TRUE','expression',1,'p_expression','grammar.py',363),
  ('expression -> FALSE','expression',1,'p_expression','grammar.py',364),
  ('expression -> function_call','expression',1,'p_expression','grammar.py',365),
  ('empty -> <empty>','empty',0,'p_empty','grammar.py',398),
]
