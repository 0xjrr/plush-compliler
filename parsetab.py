
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocLTGTLEGEEQUALSNEleftPLUSMINUSleftTIMESDIVIDEMODleftANDORrightNOTleftBITWISE_NOTleftBITWISE_ANDleftBITWISE_ORleftBITWISE_XORleftBITWISE_LSHIFTBITWISE_RSHIFTrightPLUSPLUSMINUSMINUSAND ASSIGN BITWISE_AND BITWISE_LSHIFT BITWISE_NOT BITWISE_OR BITWISE_RSHIFT BITWISE_XOR COLON COMMA DECREMENT DIVIDE DO ELSE EQUALS FALSE FLOAT FUNCTION GE GT IDENTIFIER IF INCREMENT LBRACE LBRACKET LE LPAREN LT MAIN MINUS MINUSMINUS MOD NE NOT NUMBER OR PLUS PLUSPLUS RBRACE RBRACKET RETURN RPAREN SEMICOLON STRING TIMES TRUE TYPE VAL VAR WHILEprogram : global_declaration_list declaration_list\n               | declaration_listglobal_declaration_list : global_declaration_list global_declaration\n                               | emptyglobal_declaration : variable_declarationdeclaration_list : declaration_list declaration\n                        | emptydeclaration : function_declaration\n                   | statementvariable_declaration : VAL IDENTIFIER COLON TYPE ASSIGN expression SEMICOLON\n                            | VAR IDENTIFIER COLON TYPE ASSIGN expression SEMICOLON\n                            | VAR IDENTIFIER COLON TYPE SEMICOLON\n                            | VAR IDENTIFIER COLON array_type ASSIGN array_initializer SEMICOLON\n                            | VAL IDENTIFIER COLON array_type ASSIGN array_initializer SEMICOLONarray_type : LBRACKET TYPE RBRACKET\n                  | LBRACKET array_type RBRACKETarray_initializer : LBRACKET expression_list RBRACKET\n                         | LBRACKET array_initializer_list RBRACKETarray_initializer_list : array_initializer_list COMMA array_initializer\n                              | array_initializerfunction_declaration : FUNCTION IDENTIFIER LPAREN parameter_list RPAREN COLON TYPE statement_block\n                            | FUNCTION MAIN LPAREN parameter_list RPAREN COLON TYPE statement_blockparameter_list : parameter_list COMMA parameter\n                      | parameter\n                      | emptyparameter : IDENTIFIER COLON TYPEstatement_block : LBRACE statement_list RBRACEstatement_list : statement_list statement\n                      | emptystatement : variable_declaration\n                 | if_statement\n                 | while_statement\n                 | do_while_statement\n                 | assignment_statement\n                 | array_assignment_statement\n                 | increment_statement\n                 | decrement_statement\n                 | expression_statement\n                 | return_statementreturn_statement : RETURN expression SEMICOLON\n                        | RETURN SEMICOLONif_statement : IF LPAREN expression RPAREN statement_block ELSE statement_block\n                    | IF LPAREN expression RPAREN statement_blockwhile_statement : WHILE LPAREN expression RPAREN statement_blockdo_while_statement : DO statement_block WHILE LPAREN expression RPAREN SEMICOLONassignment_statement : IDENTIFIER ASSIGN expression SEMICOLON\n                            | IDENTIFIER INCREMENT expression SEMICOLON\n                            | IDENTIFIER DECREMENT expression SEMICOLONincrement_statement : IDENTIFIER PLUSPLUS SEMICOLON\n                           | PLUSPLUS IDENTIFIER SEMICOLONdecrement_statement : IDENTIFIER MINUSMINUS SEMICOLON\n                           | MINUSMINUS IDENTIFIER SEMICOLONarray_assignment_statement : array_access ASSIGN expression SEMICOLONexpression_statement : expression SEMICOLONfunction_call : IDENTIFIER LPAREN expression_list RPARENarray_access : IDENTIFIER array_access_listarray_access_list : array_access_list LBRACKET expression RBRACKET\n    | LBRACKET expression RBRACKETexpression_list : expression_list COMMA expression\n                       | expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression MOD expression\n                  | expression GT expression\n                  | expression LT expression\n                  | expression GE expression\n                  | expression LE expression\n                  | expression EQUALS expression\n                  | expression NE expression\n                  | expression AND expression\n                  | expression OR expression\n                  | expression BITWISE_AND expression\n                  | expression BITWISE_OR expression\n                  | expression BITWISE_XOR expression\n                  | expression BITWISE_NOT expression\n                  | expression BITWISE_LSHIFT expression\n                  | expression BITWISE_RSHIFT expression\n                  | LPAREN expression RPAREN\n                  | NOT expression\n                  | IDENTIFIER\n                  | array_access\n                  | NUMBER\n                  | FLOAT\n                  | STRING\n                  | TRUE\n                  | FALSE\n                  | function_callempty :'
    
_lr_action_items = {'VAL':([0,2,3,4,5,6,7,8,11,12,13,17,18,19,20,21,22,23,24,25,26,57,80,85,94,95,123,124,126,127,128,139,140,141,149,150,151,157,165,166,181,182,186,187,190,191,195,196,],[-90,9,9,-4,9,-3,-7,-5,-6,-8,-9,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-54,-90,-41,-49,-51,9,-29,-50,-52,-40,-46,-47,-48,-27,-28,-53,-12,-43,-44,-10,-14,-11,-13,-42,-45,-21,-22,]),'VAR':([0,2,3,4,5,6,7,8,11,12,13,17,18,19,20,21,22,23,24,25,26,57,80,85,94,95,123,124,126,127,128,139,140,141,149,150,151,157,165,166,181,182,186,187,190,191,195,196,],[-90,10,10,-4,10,-3,-7,-5,-6,-8,-9,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-54,-90,-41,-49,-51,10,-29,-50,-52,-40,-46,-47,-48,-27,-28,-53,-12,-43,-44,-10,-14,-11,-13,-42,-45,-21,-22,]),'FUNCTION':([0,2,3,4,5,6,7,8,11,12,13,17,18,19,20,21,22,23,24,25,26,57,85,94,95,126,127,128,139,140,141,149,151,157,165,166,181,182,186,187,190,191,195,196,],[-90,-90,14,-4,14,-3,-7,-5,-6,-8,-9,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-54,-41,-49,-51,-50,-52,-40,-46,-47,-48,-27,-53,-12,-43,-44,-10,-14,-11,-13,-42,-45,-21,-22,]),'IF':([0,2,3,4,5,6,7,8,11,12,13,17,18,19,20,21,22,23,24,25,26,57,80,85,94,95,123,124,126,127,128,139,140,141,149,150,151,157,165,166,181,182,186,187,190,191,195,196,],[-90,-90,28,-4,28,-3,-7,-5,-6,-8,-9,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-54,-90,-41,-49,-51,28,-29,-50,-52,-40,-46,-47,-48,-27,-28,-53,-12,-43,-44,-10,-14,-11,-13,-42,-45,-21,-22,]),'WHILE':([0,2,3,4,5,6,7,8,11,12,13,17,18,19,20,21,22,23,24,25,26,57,79,80,85,94,95,123,124,126,127,128,139,140,141,149,150,151,157,165,166,181,182,186,187,190,191,195,196,],[-90,-90,29,-4,29,-3,-7,-5,-6,-8,-9,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-54,122,-90,-41,-49,-51,29,-29,-50,-52,-40,-46,-47,-48,-27,-28,-53,-12,-43,-44,-10,-14,-11,-13,-42,-45,-21,-22,]),'DO':([0,2,3,4,5,6,7,8,11,12,13,17,18,19,20,21,22,23,24,25,26,57,80,85,94,95,123,124,126,127,128,139,140,141,149,150,151,157,165,166,181,182,186,187,190,191,195,196,],[-90,-90,30,-4,30,-3,-7,-5,-6,-8,-9,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-54,-90,-41,-49,-51,30,-29,-50,-52,-40,-46,-47,-48,-27,-28,-53,-12,-43,-44,-10,-14,-11,-13,-42,-45,-21,-22,]),'IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,32,33,34,35,46,47,48,52,53,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,85,89,90,94,95,96,123,124,126,127,128,139,140,141,144,148,149,150,151,152,156,157,161,165,166,170,181,182,186,187,190,191,195,196,],[-90,-90,15,-4,15,-3,-7,-5,42,43,-6,-8,-9,44,55,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,82,83,55,55,55,55,55,55,55,-54,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-90,55,-41,134,134,-49,-51,55,15,-29,-50,-52,-40,-46,-47,-48,55,55,-27,-28,-53,55,55,-12,134,-43,-44,55,-10,-14,-11,-13,-42,-45,-21,-22,]),'PLUSPLUS':([0,2,3,4,5,6,7,8,11,12,13,15,17,18,19,20,21,22,23,24,25,26,57,80,85,94,95,123,124,126,127,128,139,140,141,149,150,151,157,165,166,181,182,186,187,190,191,195,196,],[-90,-90,32,-4,32,-3,-7,-5,-6,-8,-9,49,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-54,-90,-41,-49,-51,32,-29,-50,-52,-40,-46,-47,-48,-27,-28,-53,-12,-43,-44,-10,-14,-11,-13,-42,-45,-21,-22,]),'MINUSMINUS':([0,2,3,4,5,6,7,8,11,12,13,15,17,18,19,20,21,22,23,24,25,26,57,80,85,94,95,123,124,126,127,128,139,140,141,149,150,151,157,165,166,181,182,186,187,190,191,195,196,],[-90,-90,33,-4,33,-3,-7,-5,-6,-8,-9,50,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-54,-90,-41,-49,-51,33,-29,-50,-52,-40,-46,-47,-48,-27,-28,-53,-12,-43,-44,-10,-14,-11,-13,-42,-45,-21,-22,]),'RETURN':([0,2,3,4,5,6,7,8,11,12,13,17,18,19,20,21,22,23,24,25,26,57,80,85,94,95,123,124,126,127,128,139,140,141,149,150,151,157,165,166,181,182,186,187,190,191,195,196,],[-90,-90,34,-4,34,-3,-7,-5,-6,-8,-9,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-54,-90,-41,-49,-51,34,-29,-50,-52,-40,-46,-47,-48,-27,-28,-53,-12,-43,-44,-10,-14,-11,-13,-42,-45,-21,-22,]),'LPAREN':([0,2,3,4,5,6,7,8,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,28,29,34,35,44,45,46,47,48,52,53,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,85,94,95,96,122,123,124,126,127,128,139,140,141,144,148,149,150,151,152,156,157,165,166,170,181,182,186,187,190,191,195,196,],[-90,-90,16,-4,16,-3,-7,-5,-6,-8,-9,52,16,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,77,78,16,16,89,90,16,16,16,16,16,52,-54,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-90,16,-41,-49,-51,16,148,16,-29,-50,-52,-40,-46,-47,-48,16,16,-27,-28,-53,16,16,-12,-43,-44,16,-10,-14,-11,-13,-42,-45,-21,-22,]),'NOT':([0,2,3,4,5,6,7,8,11,12,13,16,17,18,19,20,21,22,23,24,25,26,34,35,46,47,48,52,53,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,85,94,95,96,123,124,126,127,128,139,140,141,144,148,149,150,151,152,156,157,165,166,170,181,182,186,187,190,191,195,196,],[-90,-90,35,-4,35,-3,-7,-5,-6,-8,-9,35,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,35,35,35,35,35,35,35,-54,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-90,35,-41,-49,-51,35,35,-29,-50,-52,-40,-46,-47,-48,35,35,-27,-28,-53,35,35,-12,-43,-44,35,-10,-14,-11,-13,-42,-45,-21,-22,]),'NUMBER':([0,2,3,4,5,6,7,8,11,12,13,16,17,18,19,20,21,22,23,24,25,26,34,35,46,47,48,52,53,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,85,94,95,96,123,124,126,127,128,139,140,141,144,148,149,150,151,152,156,157,165,166,170,181,182,186,187,190,191,195,196,],[-90,-90,36,-4,36,-3,-7,-5,-6,-8,-9,36,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,36,36,36,36,36,36,36,-54,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-90,36,-41,-49,-51,36,36,-29,-50,-52,-40,-46,-47,-48,36,36,-27,-28,-53,36,36,-12,-43,-44,36,-10,-14,-11,-13,-42,-45,-21,-22,]),'FLOAT':([0,2,3,4,5,6,7,8,11,12,13,16,17,18,19,20,21,22,23,24,25,26,34,35,46,47,48,52,53,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,85,94,95,96,123,124,126,127,128,139,140,141,144,148,149,150,151,152,156,157,165,166,170,181,182,186,187,190,191,195,196,],[-90,-90,37,-4,37,-3,-7,-5,-6,-8,-9,37,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,37,37,37,37,37,37,37,-54,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-90,37,-41,-49,-51,37,37,-29,-50,-52,-40,-46,-47,-48,37,37,-27,-28,-53,37,37,-12,-43,-44,37,-10,-14,-11,-13,-42,-45,-21,-22,]),'STRING':([0,2,3,4,5,6,7,8,11,12,13,16,17,18,19,20,21,22,23,24,25,26,34,35,46,47,48,52,53,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,85,94,95,96,123,124,126,127,128,139,140,141,144,148,149,150,151,152,156,157,165,166,170,181,182,186,187,190,191,195,196,],[-90,-90,38,-4,38,-3,-7,-5,-6,-8,-9,38,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,38,38,38,38,38,38,38,-54,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-90,38,-41,-49,-51,38,38,-29,-50,-52,-40,-46,-47,-48,38,38,-27,-28,-53,38,38,-12,-43,-44,38,-10,-14,-11,-13,-42,-45,-21,-22,]),'TRUE':([0,2,3,4,5,6,7,8,11,12,13,16,17,18,19,20,21,22,23,24,25,26,34,35,46,47,48,52,53,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,85,94,95,96,123,124,126,127,128,139,140,141,144,148,149,150,151,152,156,157,165,166,170,181,182,186,187,190,191,195,196,],[-90,-90,39,-4,39,-3,-7,-5,-6,-8,-9,39,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,39,39,39,39,39,39,39,-54,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-90,39,-41,-49,-51,39,39,-29,-50,-52,-40,-46,-47,-48,39,39,-27,-28,-53,39,39,-12,-43,-44,39,-10,-14,-11,-13,-42,-45,-21,-22,]),'FALSE':([0,2,3,4,5,6,7,8,11,12,13,16,17,18,19,20,21,22,23,24,25,26,34,35,46,47,48,52,53,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,85,94,95,96,123,124,126,127,128,139,140,141,144,148,149,150,151,152,156,157,165,166,170,181,182,186,187,190,191,195,196,],[-90,-90,40,-4,40,-3,-7,-5,-6,-8,-9,40,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,40,40,40,40,40,40,40,-54,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-90,40,-41,-49,-51,40,40,-29,-50,-52,-40,-46,-47,-48,40,40,-27,-28,-53,40,40,-12,-43,-44,40,-10,-14,-11,-13,-42,-45,-21,-22,]),'$end':([0,1,2,3,4,5,6,7,8,11,12,13,17,18,19,20,21,22,23,24,25,26,57,85,94,95,126,127,128,139,140,141,149,151,157,165,166,181,182,186,187,190,191,195,196,],[-90,0,-90,-2,-4,-1,-3,-7,-5,-6,-8,-9,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-54,-41,-49,-51,-50,-52,-40,-46,-47,-48,-27,-53,-12,-43,-44,-10,-14,-11,-13,-42,-45,-21,-22,]),'MAIN':([14,],[45,]),'ASSIGN':([15,31,51,129,130,132,133,145,163,171,172,],[46,81,-56,152,153,156,158,-58,-57,-15,-16,]),'INCREMENT':([15,],[47,]),'DECREMENT':([15,],[48,]),'SEMICOLON':([15,27,31,34,36,37,38,39,40,41,49,50,51,55,56,82,83,84,86,91,92,93,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,132,143,145,163,168,169,173,174,180,192,193,],[-82,57,-83,85,-84,-85,-86,-87,-88,-89,94,95,-56,-82,-83,126,127,128,-81,139,140,141,-80,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,151,157,-55,-58,-57,181,182,186,187,191,-17,-18,]),'PLUS':([15,27,31,36,37,38,39,40,41,51,54,55,56,84,86,91,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,142,143,145,163,164,167,168,173,],[-82,58,-83,-84,-85,-86,-87,-88,-89,-56,58,-82,-83,58,-81,58,58,58,58,58,-80,-61,-62,-63,-64,-65,58,58,58,58,58,58,-72,-73,-74,-75,-76,-77,-78,-79,58,58,58,58,-55,-58,-57,58,58,58,58,]),'MINUS':([15,27,31,36,37,38,39,40,41,51,54,55,56,84,86,91,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,142,143,145,163,164,167,168,173,],[-82,59,-83,-84,-85,-86,-87,-88,-89,-56,59,-82,-83,59,-81,59,59,59,59,59,-80,-61,-62,-63,-64,-65,59,59,59,59,59,59,-72,-73,-74,-75,-76,-77,-78,-79,59,59,59,59,-55,-58,-57,59,59,59,59,]),'TIMES':([15,27,31,36,37,38,39,40,41,51,54,55,56,84,86,91,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,142,143,145,163,164,167,168,173,],[-82,60,-83,-84,-85,-86,-87,-88,-89,-56,60,-82,-83,60,-81,60,60,60,60,60,-80,60,60,-63,-64,-65,60,60,60,60,60,60,-72,-73,-74,-75,-76,-77,-78,-79,60,60,60,60,-55,-58,-57,60,60,60,60,]),'DIVIDE':([15,27,31,36,37,38,39,40,41,51,54,55,56,84,86,91,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,142,143,145,163,164,167,168,173,],[-82,61,-83,-84,-85,-86,-87,-88,-89,-56,61,-82,-83,61,-81,61,61,61,61,61,-80,61,61,-63,-64,-65,61,61,61,61,61,61,-72,-73,-74,-75,-76,-77,-78,-79,61,61,61,61,-55,-58,-57,61,61,61,61,]),'MOD':([15,27,31,36,37,38,39,40,41,51,54,55,56,84,86,91,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,142,143,145,163,164,167,168,173,],[-82,62,-83,-84,-85,-86,-87,-88,-89,-56,62,-82,-83,62,-81,62,62,62,62,62,-80,62,62,-63,-64,-65,62,62,62,62,62,62,-72,-73,-74,-75,-76,-77,-78,-79,62,62,62,62,-55,-58,-57,62,62,62,62,]),'GT':([15,27,31,36,37,38,39,40,41,51,54,55,56,84,86,91,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,142,143,145,163,164,167,168,173,],[-82,63,-83,-84,-85,-86,-87,-88,-89,-56,63,-82,-83,63,-81,63,63,63,63,63,-80,-61,-62,-63,-64,-65,None,None,None,None,None,None,-72,-73,-74,-75,-76,-77,-78,-79,63,63,63,63,-55,-58,-57,63,63,63,63,]),'LT':([15,27,31,36,37,38,39,40,41,51,54,55,56,84,86,91,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,142,143,145,163,164,167,168,173,],[-82,64,-83,-84,-85,-86,-87,-88,-89,-56,64,-82,-83,64,-81,64,64,64,64,64,-80,-61,-62,-63,-64,-65,None,None,None,None,None,None,-72,-73,-74,-75,-76,-77,-78,-79,64,64,64,64,-55,-58,-57,64,64,64,64,]),'GE':([15,27,31,36,37,38,39,40,41,51,54,55,56,84,86,91,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,142,143,145,163,164,167,168,173,],[-82,65,-83,-84,-85,-86,-87,-88,-89,-56,65,-82,-83,65,-81,65,65,65,65,65,-80,-61,-62,-63,-64,-65,None,None,None,None,None,None,-72,-73,-74,-75,-76,-77,-78,-79,65,65,65,65,-55,-58,-57,65,65,65,65,]),'LE':([15,27,31,36,37,38,39,40,41,51,54,55,56,84,86,91,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,142,143,145,163,164,167,168,173,],[-82,66,-83,-84,-85,-86,-87,-88,-89,-56,66,-82,-83,66,-81,66,66,66,66,66,-80,-61,-62,-63,-64,-65,None,None,None,None,None,None,-72,-73,-74,-75,-76,-77,-78,-79,66,66,66,66,-55,-58,-57,66,66,66,66,]),'EQUALS':([15,27,31,36,37,38,39,40,41,51,54,55,56,84,86,91,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,142,143,145,163,164,167,168,173,],[-82,67,-83,-84,-85,-86,-87,-88,-89,-56,67,-82,-83,67,-81,67,67,67,67,67,-80,-61,-62,-63,-64,-65,None,None,None,None,None,None,-72,-73,-74,-75,-76,-77,-78,-79,67,67,67,67,-55,-58,-57,67,67,67,67,]),'NE':([15,27,31,36,37,38,39,40,41,51,54,55,56,84,86,91,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,142,143,145,163,164,167,168,173,],[-82,68,-83,-84,-85,-86,-87,-88,-89,-56,68,-82,-83,68,-81,68,68,68,68,68,-80,-61,-62,-63,-64,-65,None,None,None,None,None,None,-72,-73,-74,-75,-76,-77,-78,-79,68,68,68,68,-55,-58,-57,68,68,68,68,]),'AND':([15,27,31,36,37,38,39,40,41,51,54,55,56,84,86,91,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,142,143,145,163,164,167,168,173,],[-82,69,-83,-84,-85,-86,-87,-88,-89,-56,69,-82,-83,69,-81,69,69,69,69,69,-80,69,69,69,69,69,69,69,69,69,69,69,-72,-73,-74,-75,-76,-77,-78,-79,69,69,69,69,-55,-58,-57,69,69,69,69,]),'OR':([15,27,31,36,37,38,39,40,41,51,54,55,56,84,86,91,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,142,143,145,163,164,167,168,173,],[-82,70,-83,-84,-85,-86,-87,-88,-89,-56,70,-82,-83,70,-81,70,70,70,70,70,-80,70,70,70,70,70,70,70,70,70,70,70,-72,-73,-74,-75,-76,-77,-78,-79,70,70,70,70,-55,-58,-57,70,70,70,70,]),'BITWISE_AND':([15,27,31,36,37,38,39,40,41,51,54,55,56,84,86,91,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,142,143,145,163,164,167,168,173,],[-82,71,-83,-84,-85,-86,-87,-88,-89,-56,71,-82,-83,71,71,71,71,71,71,71,-80,71,71,71,71,71,71,71,71,71,71,71,71,71,-74,-75,-76,71,-78,-79,71,71,71,71,-55,-58,-57,71,71,71,71,]),'BITWISE_OR':([15,27,31,36,37,38,39,40,41,51,54,55,56,84,86,91,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,142,143,145,163,164,167,168,173,],[-82,72,-83,-84,-85,-86,-87,-88,-89,-56,72,-82,-83,72,72,72,72,72,72,72,-80,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-75,-76,72,-78,-79,72,72,72,72,-55,-58,-57,72,72,72,72,]),'BITWISE_XOR':([15,27,31,36,37,38,39,40,41,51,54,55,56,84,86,91,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,142,143,145,163,164,167,168,173,],[-82,73,-83,-84,-85,-86,-87,-88,-89,-56,73,-82,-83,73,73,73,73,73,73,73,-80,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-76,73,-78,-79,73,73,73,73,-55,-58,-57,73,73,73,73,]),'BITWISE_NOT':([15,27,31,36,37,38,39,40,41,51,54,55,56,84,86,91,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,142,143,145,163,164,167,168,173,],[-82,74,-83,-84,-85,-86,-87,-88,-89,-56,74,-82,-83,74,74,74,74,74,74,74,-80,74,74,74,74,74,74,74,74,74,74,74,74,74,-74,-75,-76,-77,-78,-79,74,74,74,74,-55,-58,-57,74,74,74,74,]),'BITWISE_LSHIFT':([15,27,31,36,37,38,39,40,41,51,54,55,56,84,86,91,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,142,143,145,163,164,167,168,173,],[-82,75,-83,-84,-85,-86,-87,-88,-89,-56,75,-82,-83,75,75,75,75,75,75,75,-80,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-78,-79,75,75,75,75,-55,-58,-57,75,75,75,75,]),'BITWISE_RSHIFT':([15,27,31,36,37,38,39,40,41,51,54,55,56,84,86,91,92,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,142,143,145,163,164,167,168,173,],[-82,76,-83,-84,-85,-86,-87,-88,-89,-56,76,-82,-83,76,76,76,76,76,76,76,-80,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-78,-79,76,76,76,76,-55,-58,-57,76,76,76,76,]),'LBRACKET':([15,51,55,87,88,131,145,153,158,163,170,194,],[53,96,53,131,131,131,-58,170,170,-57,170,170,]),'RBRACE':([17,18,19,20,21,22,23,24,25,26,57,80,85,94,95,123,124,126,127,128,139,140,141,149,150,151,157,165,166,181,182,186,187,190,191,],[-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-54,-90,-41,-49,-51,149,-29,-50,-52,-40,-46,-47,-48,-27,-28,-53,-12,-43,-44,-10,-14,-11,-13,-42,-45,]),'LBRACE':([30,146,147,179,188,189,],[80,80,80,80,80,80,]),'RPAREN':([36,37,38,39,40,41,51,54,55,56,86,89,90,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,135,136,137,138,143,145,163,164,167,175,177,],[-84,-85,-86,-87,-88,-89,-56,100,-82,-83,-81,-90,-90,143,-60,-80,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,146,147,160,-24,-25,162,-55,-58,-57,-59,180,-26,-23,]),'COMMA':([36,37,38,39,40,41,51,55,56,86,89,90,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,135,136,137,138,143,145,163,164,175,177,183,184,185,192,193,197,],[-84,-85,-86,-87,-88,-89,-56,-82,-83,-81,-90,-90,144,-60,-80,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,161,-24,-25,161,-55,-58,-57,-59,-26,-23,144,194,-20,-17,-18,-19,]),'RBRACKET':([36,37,38,39,40,41,51,55,56,86,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,142,143,145,154,155,163,164,171,172,183,184,185,192,193,197,],[-84,-85,-86,-87,-88,-89,-56,-82,-83,-81,-60,145,-80,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,163,-55,-58,171,172,-57,-59,-15,-16,192,193,-20,-17,-18,-19,]),'COLON':([42,43,134,160,162,],[87,88,159,176,178,]),'TYPE':([87,88,131,159,176,178,],[129,132,154,175,188,189,]),'ELSE':([149,165,],[-27,179,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'global_declaration_list':([0,],[2,]),'declaration_list':([0,2,],[3,5,]),'empty':([0,2,80,89,90,],[4,7,124,137,137,]),'global_declaration':([2,],[6,]),'variable_declaration':([2,3,5,123,],[8,17,17,17,]),'declaration':([3,5,],[11,11,]),'function_declaration':([3,5,],[12,12,]),'statement':([3,5,123,],[13,13,150,]),'if_statement':([3,5,123,],[18,18,18,]),'while_statement':([3,5,123,],[19,19,19,]),'do_while_statement':([3,5,123,],[20,20,20,]),'assignment_statement':([3,5,123,],[21,21,21,]),'array_assignment_statement':([3,5,123,],[22,22,22,]),'increment_statement':([3,5,123,],[23,23,23,]),'decrement_statement':([3,5,123,],[24,24,24,]),'expression_statement':([3,5,123,],[25,25,25,]),'return_statement':([3,5,123,],[26,26,26,]),'expression':([3,5,16,34,35,46,47,48,52,53,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,96,123,144,148,152,156,170,],[27,27,54,84,86,91,92,93,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,142,27,164,167,168,173,98,]),'array_access':([3,5,16,34,35,46,47,48,52,53,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,96,123,144,148,152,156,170,],[31,31,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,31,56,56,56,56,56,]),'function_call':([3,5,16,34,35,46,47,48,52,53,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,96,123,144,148,152,156,170,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'array_access_list':([15,55,],[51,51,]),'statement_block':([30,146,147,179,188,189,],[79,165,166,190,195,196,]),'expression_list':([52,170,],[97,183,]),'statement_list':([80,],[123,]),'array_type':([87,88,131,],[130,133,155,]),'parameter_list':([89,90,],[135,138,]),'parameter':([89,90,161,],[136,136,177,]),'array_initializer':([153,158,170,194,],[169,174,185,197,]),'array_initializer_list':([170,],[184,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> global_declaration_list declaration_list','program',2,'p_program','grammar.py',21),
  ('program -> declaration_list','program',1,'p_program','grammar.py',22),
  ('global_declaration_list -> global_declaration_list global_declaration','global_declaration_list',2,'p_global_declaration_list','grammar.py',30),
  ('global_declaration_list -> empty','global_declaration_list',1,'p_global_declaration_list','grammar.py',31),
  ('global_declaration -> variable_declaration','global_declaration',1,'p_global_declaration','grammar.py',38),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','grammar.py',42),
  ('declaration_list -> empty','declaration_list',1,'p_declaration_list','grammar.py',43),
  ('declaration -> function_declaration','declaration',1,'p_declaration','grammar.py',50),
  ('declaration -> statement','declaration',1,'p_declaration','grammar.py',51),
  ('variable_declaration -> VAL IDENTIFIER COLON TYPE ASSIGN expression SEMICOLON','variable_declaration',7,'p_variable_declaration','grammar.py',56),
  ('variable_declaration -> VAR IDENTIFIER COLON TYPE ASSIGN expression SEMICOLON','variable_declaration',7,'p_variable_declaration','grammar.py',57),
  ('variable_declaration -> VAR IDENTIFIER COLON TYPE SEMICOLON','variable_declaration',5,'p_variable_declaration','grammar.py',58),
  ('variable_declaration -> VAR IDENTIFIER COLON array_type ASSIGN array_initializer SEMICOLON','variable_declaration',7,'p_variable_declaration','grammar.py',59),
  ('variable_declaration -> VAL IDENTIFIER COLON array_type ASSIGN array_initializer SEMICOLON','variable_declaration',7,'p_variable_declaration','grammar.py',60),
  ('array_type -> LBRACKET TYPE RBRACKET','array_type',3,'p_array_type','grammar.py',69),
  ('array_type -> LBRACKET array_type RBRACKET','array_type',3,'p_array_type','grammar.py',70),
  ('array_initializer -> LBRACKET expression_list RBRACKET','array_initializer',3,'p_array_initializer','grammar.py',77),
  ('array_initializer -> LBRACKET array_initializer_list RBRACKET','array_initializer',3,'p_array_initializer','grammar.py',78),
  ('array_initializer_list -> array_initializer_list COMMA array_initializer','array_initializer_list',3,'p_array_initializer_list','grammar.py',82),
  ('array_initializer_list -> array_initializer','array_initializer_list',1,'p_array_initializer_list','grammar.py',83),
  ('function_declaration -> FUNCTION IDENTIFIER LPAREN parameter_list RPAREN COLON TYPE statement_block','function_declaration',8,'p_function_declaration','grammar.py',90),
  ('function_declaration -> FUNCTION MAIN LPAREN parameter_list RPAREN COLON TYPE statement_block','function_declaration',8,'p_function_declaration','grammar.py',91),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','grammar.py',98),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','grammar.py',99),
  ('parameter_list -> empty','parameter_list',1,'p_parameter_list','grammar.py',100),
  ('parameter -> IDENTIFIER COLON TYPE','parameter',3,'p_parameter','grammar.py',109),
  ('statement_block -> LBRACE statement_list RBRACE','statement_block',3,'p_statement_block','grammar.py',113),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','grammar.py',117),
  ('statement_list -> empty','statement_list',1,'p_statement_list','grammar.py',118),
  ('statement -> variable_declaration','statement',1,'p_statement','grammar.py',126),
  ('statement -> if_statement','statement',1,'p_statement','grammar.py',127),
  ('statement -> while_statement','statement',1,'p_statement','grammar.py',128),
  ('statement -> do_while_statement','statement',1,'p_statement','grammar.py',129),
  ('statement -> assignment_statement','statement',1,'p_statement','grammar.py',130),
  ('statement -> array_assignment_statement','statement',1,'p_statement','grammar.py',131),
  ('statement -> increment_statement','statement',1,'p_statement','grammar.py',132),
  ('statement -> decrement_statement','statement',1,'p_statement','grammar.py',133),
  ('statement -> expression_statement','statement',1,'p_statement','grammar.py',134),
  ('statement -> return_statement','statement',1,'p_statement','grammar.py',135),
  ('return_statement -> RETURN expression SEMICOLON','return_statement',3,'p_return_statement','grammar.py',139),
  ('return_statement -> RETURN SEMICOLON','return_statement',2,'p_return_statement','grammar.py',140),
  ('if_statement -> IF LPAREN expression RPAREN statement_block ELSE statement_block','if_statement',7,'p_if_statement','grammar.py',147),
  ('if_statement -> IF LPAREN expression RPAREN statement_block','if_statement',5,'p_if_statement','grammar.py',148),
  ('while_statement -> WHILE LPAREN expression RPAREN statement_block','while_statement',5,'p_while_statement','grammar.py',155),
  ('do_while_statement -> DO statement_block WHILE LPAREN expression RPAREN SEMICOLON','do_while_statement',7,'p_do_while_statement','grammar.py',159),
  ('assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON','assignment_statement',4,'p_assignment_statement','grammar.py',163),
  ('assignment_statement -> IDENTIFIER INCREMENT expression SEMICOLON','assignment_statement',4,'p_assignment_statement','grammar.py',164),
  ('assignment_statement -> IDENTIFIER DECREMENT expression SEMICOLON','assignment_statement',4,'p_assignment_statement','grammar.py',165),
  ('increment_statement -> IDENTIFIER PLUSPLUS SEMICOLON','increment_statement',3,'p_increment_statement','grammar.py',174),
  ('increment_statement -> PLUSPLUS IDENTIFIER SEMICOLON','increment_statement',3,'p_increment_statement','grammar.py',175),
  ('decrement_statement -> IDENTIFIER MINUSMINUS SEMICOLON','decrement_statement',3,'p_decrement_statement','grammar.py',182),
  ('decrement_statement -> MINUSMINUS IDENTIFIER SEMICOLON','decrement_statement',3,'p_decrement_statement','grammar.py',183),
  ('array_assignment_statement -> array_access ASSIGN expression SEMICOLON','array_assignment_statement',4,'p_array_assignment_statement','grammar.py',190),
  ('expression_statement -> expression SEMICOLON','expression_statement',2,'p_expression_statement','grammar.py',194),
  ('function_call -> IDENTIFIER LPAREN expression_list RPAREN','function_call',4,'p_function_call','grammar.py',198),
  ('array_access -> IDENTIFIER array_access_list','array_access',2,'p_array_access','grammar.py',202),
  ('array_access_list -> array_access_list LBRACKET expression RBRACKET','array_access_list',4,'p_array_access_list','grammar.py',207),
  ('array_access_list -> LBRACKET expression RBRACKET','array_access_list',3,'p_array_access_list','grammar.py',208),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','grammar.py',216),
  ('expression_list -> expression','expression_list',1,'p_expression_list','grammar.py',217),
  ('expression -> expression PLUS expression','expression',3,'p_expression','grammar.py',224),
  ('expression -> expression MINUS expression','expression',3,'p_expression','grammar.py',225),
  ('expression -> expression TIMES expression','expression',3,'p_expression','grammar.py',226),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','grammar.py',227),
  ('expression -> expression MOD expression','expression',3,'p_expression','grammar.py',228),
  ('expression -> expression GT expression','expression',3,'p_expression','grammar.py',229),
  ('expression -> expression LT expression','expression',3,'p_expression','grammar.py',230),
  ('expression -> expression GE expression','expression',3,'p_expression','grammar.py',231),
  ('expression -> expression LE expression','expression',3,'p_expression','grammar.py',232),
  ('expression -> expression EQUALS expression','expression',3,'p_expression','grammar.py',233),
  ('expression -> expression NE expression','expression',3,'p_expression','grammar.py',234),
  ('expression -> expression AND expression','expression',3,'p_expression','grammar.py',235),
  ('expression -> expression OR expression','expression',3,'p_expression','grammar.py',236),
  ('expression -> expression BITWISE_AND expression','expression',3,'p_expression','grammar.py',237),
  ('expression -> expression BITWISE_OR expression','expression',3,'p_expression','grammar.py',238),
  ('expression -> expression BITWISE_XOR expression','expression',3,'p_expression','grammar.py',239),
  ('expression -> expression BITWISE_NOT expression','expression',3,'p_expression','grammar.py',240),
  ('expression -> expression BITWISE_LSHIFT expression','expression',3,'p_expression','grammar.py',241),
  ('expression -> expression BITWISE_RSHIFT expression','expression',3,'p_expression','grammar.py',242),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','grammar.py',243),
  ('expression -> NOT expression','expression',2,'p_expression','grammar.py',244),
  ('expression -> IDENTIFIER','expression',1,'p_expression','grammar.py',245),
  ('expression -> array_access','expression',1,'p_expression','grammar.py',246),
  ('expression -> NUMBER','expression',1,'p_expression','grammar.py',247),
  ('expression -> FLOAT','expression',1,'p_expression','grammar.py',248),
  ('expression -> STRING','expression',1,'p_expression','grammar.py',249),
  ('expression -> TRUE','expression',1,'p_expression','grammar.py',250),
  ('expression -> FALSE','expression',1,'p_expression','grammar.py',251),
  ('expression -> function_call','expression',1,'p_expression','grammar.py',252),
  ('empty -> <empty>','empty',0,'p_empty','grammar.py',279),
]
